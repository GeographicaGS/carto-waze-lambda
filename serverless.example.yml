# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com

service: carto-waze-mycity

provider:
  name: aws
  runtime: python3.8
  region: eu-west-1

package:
  include:
   - src/**
   - gcloud-credentials.json
  exclude:
   - config.env
   - node_modules/**
   - '!node_modules/node-fetch/**'
   - .venv

functions:
  georss:
    handler: src.handler.carto_waze_lambda_handler
    timeout: 30
    events:
      - schedule: rate(2 minutes)
    # environment:
    #   CARTO_API_KEY: ${env:CARTO_API_KEY}
    #   CARTO_USER: ${env:CARTO_USER}
    #   CARTO_MAX_HOURS_DATA_RETENTION: ${env:CARTO_MAX_HOURS_DATA_RETENTION}
    #   BIG_QUERY_ENABLE_HISTORIC: ${env:BIG_QUERY_ENABLE_HISTORIC}
    #   BIG_QUERY_HISTORIC_PROJECT: ${env:BIG_QUERY_HISTORIC_PROJECT}
    #   BIG_QUERY_HISTORIC_DATASET: ${env:BIG_QUERY_HISTORIC_DATASET}
    #   WAZE_API_URL: ${env:WAZE_API_URL}
    #   WAZE_TKN: ${env:WAZE_TKN}
    #   WAZE_PARTNER: ${env:WAZE_PARTNER}
    #   WAZE_POLY: ${env:WAZE_POLY}
    #   TRAFFICO_PREFIX: ${env:TRAFFICO_PREFIX}

  daily-aggs:
    handler: src.daily_agg_handler.carto_waze_daily_agg_handler
    timeout: 900
    events:
      - schedule: cron(0 2 * * ? *)
    # environment:
    #   CARTO_API_KEY: ${env:CARTO_API_KEY}
    #   CARTO_USER: ${env:CARTO_USER}
    #   CARTO_MAX_HOURS_DATA_RETENTION: ${env:CARTO_MAX_HOURS_DATA_RETENTION}
    #   BIG_QUERY_ENABLE_HISTORIC: ${env:BIG_QUERY_ENABLE_HISTORIC}
    #   BIG_QUERY_HISTORIC_PROJECT: ${env:BIG_QUERY_HISTORIC_PROJECT}
    #   BIG_QUERY_HISTORIC_DATASET: ${env:BIG_QUERY_HISTORIC_DATASET}
    #   WAZE_API_URL: ${env:WAZE_API_URL}
    #   WAZE_TKN: ${env:WAZE_TKN}
    #   WAZE_PARTNER: ${env:WAZE_PARTNER}
    #   WAZE_POLY: ${env:WAZE_POLY}
    #   TRAFFICO_PREFIX: ${env:TRAFFICO_PREFIX}

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
